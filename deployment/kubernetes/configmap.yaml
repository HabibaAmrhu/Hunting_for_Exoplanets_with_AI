apiVersion: v1
kind: ConfigMap
metadata:
  name: exoplanet-config
  namespace: exoplanet-detection
data:
  # Application configuration
  app.yaml: |
    app:
      name: "exoplanet-detection-pipeline"
      version: "1.0.0"
      environment: "production"
      debug: false
      
    # Model configuration
    model:
      default_architecture: "ensemble"
      batch_size: 32
      sequence_length: 2048
      confidence_threshold: 0.5
      
    # Data processing
    data:
      max_file_size: "100MB"
      supported_formats: ["fits", "csv", "json"]
      cache_ttl: 3600
      
    # Performance settings
    performance:
      max_workers: 4
      timeout: 300
      memory_limit: "2Gi"
      
    # Monitoring
    monitoring:
      enabled: true
      metrics_interval: 60
      alert_thresholds:
        accuracy: 0.85
        latency: 1000
        error_rate: 0.05
  
  # Logging configuration
  logging.yaml: |
    version: 1
    disable_existing_loggers: false
    
    formatters:
      standard:
        format: '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
      json:
        format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s"}'
    
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: standard
        stream: ext://sys.stdout
      
      file:
        class: logging.handlers.RotatingFileHandler
        level: DEBUG
        formatter: json
        filename: /app/logs/app.log
        maxBytes: 10485760  # 10MB
        backupCount: 5
    
    loggers:
      src:
        level: DEBUG
        handlers: [console, file]
        propagate: false
      
      uvicorn:
        level: INFO
        handlers: [console]
        propagate: false
    
    root:
      level: INFO
      handlers: [console]
  
  # Database configuration
  database.yaml: |
    database:
      host: "postgresql-service"
      port: 5432
      name: "exoplanet_db"
      pool_size: 10
      max_overflow: 20
      pool_timeout: 30
      
    redis:
      host: "redis-service"
      port: 6379
      db: 0
      max_connections: 10
  
  # API configuration
  api.yaml: |
    api:
      host: "0.0.0.0"
      port: 8000
      workers: 4
      
    cors:
      allow_origins: ["*"]
      allow_methods: ["GET", "POST", "PUT", "DELETE"]
      allow_headers: ["*"]
      
    rate_limiting:
      enabled: true
      requests_per_minute: 100
      
    authentication:
      enabled: false  # Set to true in production
      jwt_secret: "your-secret-key"
      token_expiry: 3600