# Prometheus configuration for monitoring exoplanet detection pipeline
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'exoplanet-production'
        environment: 'prod'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Exoplanet API service
      - job_name: 'exoplanet-api'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - exoplanet-prod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: exoplanet-api
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # Node exporter
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            regex: 'node-exporter'
            action: keep

      # cAdvisor
      - job_name: 'cadvisor'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

---
# Prometheus alerting rules
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-rules
  namespace: monitoring
data:
  exoplanet-rules.yml: |
    groups:
      - name: exoplanet.rules
        rules:
          # High error rate
          - alert: HighErrorRate
            expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "High error rate detected"
              description: "Error rate is {{ $value }} errors per second"

          # High response time
          - alert: HighResponseTime
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m])) > 1.0
            for: 5m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "High response time detected"
              description: "95th percentile response time is {{ $value }} seconds"

          # High CPU usage
          - alert: HighCPUUsage
            expr: rate(container_cpu_usage_seconds_total{pod=~"exoplanet-.*"}[5m]) > 0.8
            for: 10m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "High CPU usage detected"
              description: "CPU usage is {{ $value }}%"

          # High memory usage
          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes{pod=~"exoplanet-.*"} / container_spec_memory_limit_bytes > 0.9
            for: 5m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "High memory usage detected"
              description: "Memory usage is {{ $value }}%"

          # Pod restart
          - alert: PodRestarting
            expr: increase(kube_pod_container_status_restarts_total{pod=~"exoplanet-.*"}[1h]) > 0
            for: 0m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "Pod is restarting"
              description: "Pod {{ $labels.pod }} has restarted {{ $value }} times in the last hour"

          # Service down
          - alert: ServiceDown
            expr: up{job="exoplanet-api"} == 0
            for: 1m
            labels:
              severity: critical
              service: exoplanet-api
            annotations:
              summary: "Service is down"
              description: "Exoplanet API service is not responding"

          # Model prediction accuracy drop
          - alert: ModelAccuracyDrop
            expr: model_accuracy < 0.8
            for: 5m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "Model accuracy has dropped"
              description: "Model accuracy is {{ $value }}, below threshold of 0.8"

          # High prediction latency
          - alert: HighPredictionLatency
            expr: histogram_quantile(0.95, rate(prediction_duration_seconds_bucket[5m])) > 5.0
            for: 5m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "High prediction latency"
              description: "95th percentile prediction latency is {{ $value }} seconds"

          # Data drift detected
          - alert: DataDriftDetected
            expr: data_drift_score > 0.1
            for: 0m
            labels:
              severity: warning
              service: exoplanet-api
            annotations:
              summary: "Data drift detected"
              description: "Data drift score is {{ $value }}, indicating potential model degradation"

          # Queue backlog
          - alert: HighQueueBacklog
            expr: queue_size > 1000
            for: 5m
            labels:
              severity: warning
              service: exoplanet-worker
            annotations:
              summary: "High queue backlog"
              description: "Queue size is {{ $value }}, indicating processing delays"

---
# Grafana dashboard configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: monitoring
data:
  exoplanet-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Exoplanet Detection Pipeline",
        "tags": ["exoplanet", "ml", "api"],
        "style": "dark",
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"exoplanet-api\"}[5m])",
                "legendFormat": "{{method}} {{status}}"
              }
            ],
            "yAxes": [
              {
                "label": "Requests/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job=\"exoplanet-api\"}[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(http_request_duration_seconds_bucket{job=\"exoplanet-api\"}[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "yAxes": [
              {
                "label": "Seconds"
              }
            ]
          },
          {
            "id": 3,
            "title": "Error Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(http_requests_total{job=\"exoplanet-api\",status=~\"5..\"}[5m])",
                "legendFormat": "5xx errors"
              },
              {
                "expr": "rate(http_requests_total{job=\"exoplanet-api\",status=~\"4..\"}[5m])",
                "legendFormat": "4xx errors"
              }
            ],
            "yAxes": [
              {
                "label": "Errors/sec"
              }
            ]
          },
          {
            "id": 4,
            "title": "CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{pod=~\"exoplanet-.*\"}[5m])",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "CPU cores"
              }
            ]
          },
          {
            "id": 5,
            "title": "Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{pod=~\"exoplanet-.*\"} / 1024 / 1024",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "MB"
              }
            ]
          },
          {
            "id": 6,
            "title": "Model Accuracy",
            "type": "singlestat",
            "targets": [
              {
                "expr": "model_accuracy",
                "legendFormat": "Accuracy"
              }
            ],
            "valueName": "current",
            "format": "percent"
          },
          {
            "id": 7,
            "title": "Prediction Latency",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(prediction_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              }
            ],
            "yAxes": [
              {
                "label": "Seconds"
              }
            ]
          },
          {
            "id": 8,
            "title": "Active Connections",
            "type": "singlestat",
            "targets": [
              {
                "expr": "active_connections",
                "legendFormat": "Connections"
              }
            ],
            "valueName": "current"
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "5s"
      }
    }