version: '3.8'

services:
  # Main application
  exoplanet-app:
    build:
      context: .
      target: production
    ports:
      - "8501:8501"
    environment:
      - PYTHONPATH=/home/exoplanet
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./data:/home/exoplanet/data:ro
      - ./models:/home/exoplanet/models:ro
      - app-results:/home/exoplanet/results
      - app-logs:/home/exoplanet/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - exoplanet-network

  # Development environment
  exoplanet-dev:
    build:
      context: .
      target: development
    ports:
      - "8502:8501"
      - "8888:8888"  # Jupyter
    environment:
      - PYTHONPATH=/home/exoplanet
    volumes:
      - .:/home/exoplanet
      - dev-cache:/home/exoplanet/.cache
    profiles:
      - dev
    networks:
      - exoplanet-network
    command: >
      bash -c "
        jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root &
        python -m streamlit run streamlit_app/main.py --server.port=8501 --server.address=0.0.0.0
      "

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    profiles:
      - cache
    networks:
      - exoplanet-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro
    depends_on:
      - exoplanet-app
    restart: unless-stopped
    profiles:
      - production
    networks:
      - exoplanet-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    profiles:
      - monitoring
    networks:
      - exoplanet-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./deployment/grafana:/etc/grafana/provisioning
    profiles:
      - monitoring
    networks:
      - exoplanet-network

volumes:
  app-results:
  app-logs:
  dev-cache:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  exoplanet-network:
    driver: bridge